{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/util/injectSortable.js","webpack:///./src/util/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Toolbar.js","webpack:///./src/components/ToolbarButton.js","webpack:///./src/components/Creatable.js","webpack:///./src/components/ResizeButton.js","webpack:///./src/components/Tooltip.js","webpack:///./src/components/TreeNode.js","webpack:///./src/components/index.js","webpack:///./src/index.js","webpack:///./src/util/injectSearchable.js","webpack:///external \"ReactDOM\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__7__","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","IS_IE","detectIE","CLASS_GETS_EMPTY","_callee","evt","from","to","oldIndex","newIndex","item","parentFromId","parentToId","id","nextSibling","nextObj","prevObj","nextId","prevId","_this$props2","onSort","onSortEnd","buildTree","_this2","this","regenerator_default","a","wrap","_context","prev","next","attributes","removeClass","document","body","abrupt","nextElementSibling","undefined","previousElementSibling","props","Error","produce","tree","draft","parentFromTree","parentToTree","rootId","getTreeItemById","childNodes","treeItem","appendChild","values","_sortables","forEach","sortable","_currentOrder","sort","t0","finish","stop","handleSortableTree","ul","_this","arguments","isSortable","sortables","destroy","_this$props","sortableDelay","isSortableDisabled","onSortStart","forceSortableFallback","Sortable","group","className","indexOf","delay","filter","forceFallback","disabled","draggable","ghostClass","chosenClass","dragClass","dataIdAttr","setData","dataTransfer","dragEl","setDragImage","elem","createElement","style","display","onStart","toArray","addClass","onEnd","animation","uuid","s4","Math","floor","random","toString","substring","el","classList","add","remove","replace","RegExp","split","join","Storage","_classCallCheck","cache","_createClass","path","collection","getItem","setObjectPath","localStorage","setItem","JSON","stringify","parse","getObjectPath","names","SUPPORTS_LOCAL_STORAGE","_localStorage","removeItem","e","touchable","navigator","maxTouchPoints","touch","up","down","move","resizeOpposite","containerId","oppositeId","width","script","getElementById","innerHTML","injectStyle","updateTreeItemById","callback","setState","newTree","_findTreeItemById","parentId","getTreeParentById","found","node","buildOrderedParentPairs","pairs","mapper","fid","pid","ua","userAgent","msie","parseInt","rv","edge","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","element","currTime","Date","getTime","timeToCall","max","setTimeout","clearTimeout","Header","_ref","headline","creatable","isCreatableLinkDisabled","isCreatableLinkCancel","isToolbarActive","isToolbarBusy","toolbar","toolbarActiveButton","isBusyHeader","external_React_default","spin_default","spinning","size","Creatable","_extends","backButton","type","keys","buttons","map","Toolbar_Toolbar","activeButton","Toolbar","cancelNode","originalNode","onCancel","React","Component","activeActions","hasActionButtonSave","onSave","ToolbarButton_ToolbarButton","content","label","onClick","handleCancelClick","save","Toolbar_extends","ToolbarButton","preventDefault","_this$props$visible","visible","cssClasses","toolTipTitle","toolTipText","menu","toolTipPlacement","dropdownPlacement","modifier","bodyAttr","href","classNames","aiot-disabled","handleClick","Tooltip","placement","title","overlay","overlayMenu","rest","_objectWithoutProperties","menuItem","menu_default","Item","ToolbarButton_extends","overlayClassName","dropdown_default","_ref$visible","icon","data-aio-type","ResizeButton","ResizeButton_classCallCheck","ResizeButton_defineProperty","ResizeButton_assertThisInitialized","ResizeButton_possibleConstructorReturn","ResizeButton_getPrototypeOf","_getContainerWidth","state","restoreWidth","handleResize","onResizeFinished","ev","addEventListener","currentlyResizing","removeEventListener","_container","opposite","force","minWidth","maxWidth","isEvent","pageX","getBoundingClientRect","left","scrollLeft","collapse","xOpposite","oppositeOffset","handleOpposite","onResize","initialWidth","defaultRestoreWidth","nextProps","nextState","changedState","stateKeys","k","_getContainer","handleMouseDown","handleMouseUp","handleDoubleClick","find","singleFind","findObj","querySelectorAll","computed","getComputedStyle","borderLeftWidth","borderRightWidth","_ref$placement","children","_ref$mouseEnterDelay","mouseEnterDelay","_ref$mouseLeaveDelay","mouseLeaveDelay","Tooltip_objectWithoutProperties","popoverContent","fontSize","fontWeight","paddingBottom","marginBottom","borderBottom","popover_default","Tooltip_extends","TreeNode","TreeNode_classCallCheck","TreeNode_defineProperty","TreeNode_assertThisInitialized","TreeNode_possibleConstructorReturn","TreeNode_getPrototypeOf","handleButtonSave","$rename","onNodePressF2","_save","inputValue","onRenameClose","target","selector","elements","ishaveselector","parentElement","nodeType","Node","ELEMENT_NODE","matches","parents","onSelect","newExpanded","expanded","onExpand","refNode","$_create","scrollTo","propKeys","defaultProps","expandedState","initialInputValue","changedProps","searchSelected","container","scrollIntoView","onlyScrollIfNeeded","alignWithTop","_this$props2$childNod","count","selected","$busy","_this$props2$$droppab","$droppable","$create","_this$props2$$visible","$visible","attr","_this$props3","displayChildren","renderItem","onAddClose","onUlRef","renameSaveText","renameAddText","nodeAttr","visibleChildNodes","_ref$$visible","togglable","isExpanded","isActive","aiot-active","aiot-forceEnable","aiot-togglable","aiot-expanded","aiot-search-selected","aiot-droppable","useIcon","iconActive","useIconObj","isUlVisible","refSortable","ref","createTreeNode","TreeNode_extends","aiot-sortable","data-li-id","data-id","tabIndex","handleSelect","onDoubleClick","handleToggle","onKeyDown","handleNodeKeyDown","handleRef","autoFocus","onChange","handleChange","handleInputKeyDown","aiot-sortable-one","data-childs-for","aiot-open","hash","BusyIcon","icon_default","spin","Tree","src_classCallCheck","src_defineProperty","src_assertThisInitialized","src_possibleConstructorReturn","src_getPrototypeOf","collapsed","storage","onNodeExpand","createRoot","context","isTreeLinkDisabled","resultSelectedNodeIdx","resultTreeLength","resultTree","aiot-disable-links","propSearchSelected","TreeNode_TreeNode","src_extends","handleNodeExpand","searchable","searchInputBusy","isTreeBusy","staticTree","isSortableBusy","noFoldersTitle","noFoldersDescription","noSearchResult","_this$state","sortingBusy","searchTerm","resultTreeBusy","renderTree","input_default","handleSearch","onBlur","handleSearchBlur","handleSearchKeyDown","suffix","components_BusyIcon","cursor","handleSearchClose","minHeight","alert_default","message","description","showIcon","isResizable","innerClassName","isSticky","isStickyHeader","headerStickyAttr","_this$state2","currentlySorting","stickyTreeCalculatedTop","headerAttr","bodyHeader","bodyTreeWrapper","renderTreeWrapper","aiot-currently-sorting","treeStickyAttr","assign","top","ResizeButton_ResizeButton","handleResizeFinished","react_stickynode_default","toLowerCase","trim","searchTimeout","addition","handleSortableTreeWillUpdate","newProps","update","option","_this$props4","obj","querySelector","newTreeCalculatedTop","offsetHeight","headerStickyTop","headerStickyTopObj","_this$props5","theme","isFullWidth","aiot-wrap-collapse","aiot-full-width","defaultWidth","wrapperAttr","_objectSpread","div","renderWrapper","append","folder","rename","__webpack_exports__"],"mappings":"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","file":"react-aiot.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"ReactDOM\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"ReactDOM\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactAIOT\"] = factory(require(\"React\"), require(\"ReactDOM\"));\n\telse\n\t\troot[\"ReactAIOT\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpReactAIOT\"] = window[\"webpackJsonpReactAIOT\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([315,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { getTreeItemById, addClass, removeClass, detectIE } from '.';\nimport produce from 'immer';\nimport Sortable from 'sortablejs';\n\nconst IS_IE = detectIE();\n\nconst CLASS_GETS_EMPTY = 'aiot-sortable-gets-empty';\n\nexport function handleSortableTreeWillUpdate(newProps) {\n    const { sortableDelay, isSortableDisabled } = newProps,\n        sortables = this._sortables = this._sortables || { };\n    let update = sortableDelay !== this.props.sortableDelay;\n    if (!update && isSortableDisabled !== this.props.isSortableDisabled) {\n        update = true;\n    }\n    \n    // Update sortablejs\n    update && Object.values(sortables).forEach(sortable => {\n        sortable.option('delay', sortableDelay);\n        sortable.option('disabled', isSortableDisabled);\n    });\n}\n\nasync function handleSortableTreeEnd(evt) {\n    const { from, to, oldIndex, newIndex, item } = evt,\n        parentFromId = +from.attributes['data-childs-for'].value,\n        parentToId = +to.attributes['data-childs-for'].value;\n    removeClass(from, CLASS_GETS_EMPTY);\n    \n    // Skip no updates\n    if (parentFromId === parentToId && oldIndex === newIndex) {\n        removeClass(document.body, 'aiot-currently-sorting');\n        return;\n    }\n    \n    // Collect data\n    const id = +(item.attributes['data-li-id'].value),\n        nextSibling = item.nextElementSibling,\n        nextObj = nextSibling && nextSibling.attributes['data-li-id'] ? nextSibling : undefined,\n        prevObj = item.previousElementSibling,\n        nextId = +(nextObj && nextObj.attributes['data-li-id'].value),\n        prevId = +(prevObj && prevObj.attributes['data-li-id'].value),\n        { onSort, onSortEnd } = this.props;\n    onSortEnd && onSortEnd(evt);\n    \n    //this.setState({ sortingBusy: true }); Should be set by onSort method\n    if (!onSort) {\n        throw new Error('You have to define a onSort function to enable sorting functionality.');\n    }\n    \n    // Function for getting the new tree prop with modified order\n    const buildTree = () => produce(this.props.tree, draft => {\n        // Find parent trees with children\n        const rootId = this.props.rootId;\n        let parentFromTree, parentToTree;\n        if (parentFromId === rootId) {\n            parentFromTree = draft;\n        }else{\n            parentFromTree = getTreeItemById(parentFromId, draft);\n            parentFromTree = parentFromTree.childNodes = parentFromTree.childNodes || [];\n        }\n        \n        if (parentToId === rootId) {\n            parentToTree = draft;\n        }else{\n            parentToTree = getTreeItemById(parentToId, draft);\n            parentToTree = parentToTree.childNodes = parentToTree.childNodes || [];\n        }\n        \n        // Modify tree\n        const treeItem = parentFromTree[oldIndex];\n        parentFromTree.splice(oldIndex, 1);\n        parentToTree.splice(newIndex, 0, treeItem);\n    });\n    \n    from.appendChild(item);\n    Object.values(this._sortables).forEach(sortable => sortable._currentOrder && sortable.sort(sortable._currentOrder));\n    \n    try {\n        await onSort({ evt, from, to, oldIndex, newIndex, // Event + calculated attributes\n            id, nextObj, prevObj, nextId, prevId, parentFromId, parentToId, buildTree });\n    } catch (e) {\n        // Silence is golden. You have to implement error handling in onSort\n    } finally {\n        removeClass(document.body, 'aiot-currently-sorting');\n        //this.setState({ sortingBusy: false });\n    }\n}\n\nexport function handleSortableTree(ul, id = 0) {\n    if (!this.props.isSortable) {\n        return;\n    }\n    \n    const sortables = this._sortables = this._sortables || { };\n    \n    if ('destroy' === ul) {\n        // Destroy all sortable instances\n        Object.values(sortables).forEach(sortable => sortable.destroy());\n    } else if (ul) {\n        //console.log(\"create\", ul, id, IS_IE);\n        const { sortableDelay, isSortableDisabled, onSortStart, forceSortableFallback } = this.props;\n        \n        // Create sortable\n        sortables[id] = Sortable.create(ul, {\n            group: this.id('handleSortableTree'),\n            sort: ul.className.indexOf('aiot-sortable-one') === -1,\n            delay: sortableDelay,\n            filter: '.aiot-expander',\n            /**\n             * SortableJs does currently not support the usage of delay option\n             * in IE11 and Edge browser. So for those browser we have to use the\n             * implemented fallback instead of native drag and drop.\n             * \n             * @internal\n             */\n            forceFallback: typeof forceSortableFallback === 'boolean' ? forceSortableFallback : !!IS_IE,\n            disabled: isSortableDisabled,\n            draggable: '.aiot-sortable',\n            ghostClass: 'aiot-sortable-ghost',  // Class name for the drop placeholder\n            chosenClass: 'aiot-sortable-chosen',  // Class name for the chosen item\n            dragClass: 'aiot-sortable-drag',  // Class name for the dragging item\n            dataIdAttr: 'data-li-id',\n            setData: (dataTransfer, dragEl) => {\n                // Hide native draggable ghost\n        \t    if (dataTransfer.setDragImage) {\n        \t        const elem = document.createElement('div');\n        \t        elem.style.display = 'none';\n        \t        document.body.appendChild(elem);\n        \t        dataTransfer.setDragImage(elem, 0, 0);\n        \t    }\n        \t},\n            onStart: evt => {\n                // Save order before sort\n                Object.values(this._sortables).forEach(sortable => (sortable._currentOrder = sortable.toArray()));\n                addClass(document.body, 'aiot-currently-sorting');\n                addClass(evt.from, CLASS_GETS_EMPTY);\n                \n                // Add class if the parent gets empty through this sort\n                /*if ([].slice.call(evt.from.children).filter(({ className, tagName, children }) => {\n                        return className.indexOf('aiot-sortable-ghost') === -1 && tagName.toLowerCase() === 'li';\n                    }).length === 1) {\n                    addClass(evt.from, CLASS_GETS_EMPTY);\n                }*/\n                onSortStart && onSortStart(evt);\n            },\n            onEnd: handleSortableTreeEnd.bind(this),\n            animation: 100\n        });\n    }else if (sortables[id]) {\n        //console.log(\"destroy\", id);\n        \n        // Destroy sortable instance\n        sortables[id].destroy();\n        delete sortables[id];\n    }\n}","/** @module react-aiot/util */\nimport { handleSortableTree, handleSortableTreeWillUpdate } from './injectSortable';\nimport { handleSearch, handleSearchBlur, handleSearchClose, handleSearchKeyDown } from './injectSearchable';\n\nexport { handleSortableTree, handleSortableTreeWillUpdate };\nexport { handleSearch, handleSearchBlur, handleSearchClose, handleSearchKeyDown };\n\n/**\n * Create a unique id.\n * \n * @returns {string}\n */\nexport function uuid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return \"aiot-\" + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n/**\n * Helper function to add a class to a DOMElement.\n * \n * @param {DOMElement} el The element\n * @param {string} className The class names\n */\nexport function addClass(el, className) {\n    if (el.classList)\n        el.classList.add(className);\n    else\n        el.className += ' ' + className;\n}\n\n/**\n * Helper function to remove a class to a DOMElement.\n * \n * @param {DOMElement} el The element\n * @param {string} className The class names\n */\nexport function removeClass(el, className) {\n    if (el.classList)\n        el.classList.remove(className);\n    else\n        el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n}\n\n/**\n * Get parent of a element.\n * \n * @see https://gist.github.com/ziggi/2f15832b57398649ee9b\n */\nexport function parents(elem, selector) {\n\tvar elements = [];\n\tvar ishaveselector = selector !== undefined;\n \n\twhile ((elem = elem.parentElement) !== null) {\n\t\tif (elem.nodeType !== window.Node.ELEMENT_NODE) {\n\t\t\tcontinue;\n\t\t}\n \n\t\tif (!ishaveselector || elem.matches(selector)) {\n\t\t\telements.push(elem);\n\t\t}\n\t}\n \n\treturn elements;\n}\n\n/**\n * Create a helper class to store compact JSON data in local storage if supported.\n * \n * @param {int} id Unique id for the storage key. Prefixed with \"AIOT-\"\n */\nexport class Storage {\n    constructor(id) {\n        this.id = id;\n        this.cache = undefined;\n    }\n    \n    /**\n     * Set the item for a JSON path for this local storage object.\n     * \n     * @param {string} path The path\n     * @param {*} value The stringify-able value\n     */\n    setItem(path, value) {\n        let collection = this.getItem();\n        this.setObjectPath(collection, path, value);\n        window.localStorage.setItem(\"AIOT-\" + this.id, JSON.stringify(collection));\n        this.cache = undefined;\n    }\n    \n    /**\n     * Get the item for a JSON path for this local storage object.\n     * \n     * @param {string} path The path\n     * @returns {*}\n     */\n    getItem(path) {\n        if (!this.cache) {\n            this.cache = JSON.parse(window.localStorage.getItem('AIOT-' + this.id) || '{}');\n        }\n        return path ? this.getObjectPath(this.cache, path) : this.cache;\n    }\n    \n    /**\n     * Get the item for a JSON path for the passed object.\n     * \n     * @param {object} object The object\n     * @param {string} path The path\n     * @returns {*}\n     */\n    getObjectPath(object, path) {\n        let names = (path || '').split('.');\n\t\tfor (let i = 0; object && i < names.length; i++) {\n\t\t\tobject = object[names[i]];\n\t\t}\n\t\treturn object;\n    }\n    \n    /**\n     * Set the item for a JSON path for the passed object.\n     * \n     * @param {object} object The object\n     * @param {string} path The path\n     * @param {*} value The stringify-able value\n     */\n    setObjectPath(object, path, value) {\n        let l, names = (path || '').split('.');\n\t\tif ( ( l = names.length ) > 0 ) {\n\t\t\tfor (var i = 0; object && i < l - 1; i++) {\n\t\t\t\tif (!object[names[i]] ) {\n\t\t\t\t\tobject[names[i]] = {};\n\t\t\t\t}\n\t\t\t\tobject = object[names[i]];\n\t\t\t}\n\t\t\tobject[names[l - 1]] = value;\n\t\t}\n    }\n}\n\n/**\n * If true the current browser supports local storage.\n * \n * @type boolean\n */\nexport const SUPPORTS_LOCAL_STORAGE = (function() {\n    var test = 'test';\n    try {\n        var _localStorage = window[\"localStorage\"];\n        _localStorage.setItem(test, test);\n        _localStorage.removeItem(test);\n        return true;\n    } catch(e) {\n        return false;\n    }\n})();\n\n/**\n * An object with the touchable event names for mouseup, mousedown, mousemove.\n * \n * @type object\n */\nexport const touchable = 'ontouchstart' in window || window.navigator.maxTouchPoints\n    ? { touch: true, up: \"touchend\", down: \"touchstart\", move: \"touchmove\" }\n    : { touch: false, up: \"mouseup\", down: \"mousedown\", move: \"mousemove\" };\n\n/**\n * Allows to inject a virtual CSS style sheet.\n * \n * @param {string} id The unique id for the style. If already available it gets overriden by the new style rules\n * @param {string} style The style rules\n * @returns {DOMElement|boolean} If successful it returns the script-DOMElement and false if failure\n */\nexport function injectStyle(id, style) {\n    try {\n        // Remove old element\n        const script = document.getElementById(id);\n        script && script.remove();\n        \n        // Create element\n        const elem = document.createElement('div');\n        elem.id = id;\n        elem.style.display = 'none';\n        elem.innerHTML = '&shy;<style>' + style + '</style>';\n        document.body.appendChild(elem);\n        return elem;\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Resizes a given container with calc(100% - width).\n * \n * @param {string} containerId The container ID\n * @param {string} oppositeId The opposite ID of container\n * @param {int} width Width in px\n */\nexport function resizeOpposite(containerId, oppositeId, width) {\n    return injectStyle(containerId + '-styleOpposite',\n        '#' + oppositeId + '{ width: -webkit-calc(100% - ' + width + 'px);width: -moz-calc(100% - ' + width + 'px);width: calc(100% - ' + width + 'px); }');\n}\n\n/**\n * Allows to update a tree node item by id.\n * \n * @param {string|id} id The id of the tree node\n * @param {object[]} tree The {@link module:react-aiot/components/TreeNode|TreeNode} properties to modify\n * @param {module:react-aiot/util#updateTreeItemByIdCallback} callback \n * @param {module:react-aiot/util#updateTreeItemByIdSetState} setState \n */\nexport function updateTreeItemById(id, tree, callback, setState) {\n    const newTree = tree;\n    for (let i = 0; i < newTree.length; i++) {\n        if (newTree[i].id === id) {\n            /**\n             * This function is called when the tree node is found in updateTreeItemById.\n             * You can then modify the node.\n             * \n             * @callback module:react-aiot/util#updateTreeItemByIdCallback\n             * @param {object} node {@link module:react-aiot/components/TreeNode|TreeNode}\n             */\n            callback(newTree[i]);\n            break;\n        }else if (newTree[i].childNodes) {\n            updateTreeItemById(id, newTree[i].childNodes, callback);\n        }\n    }\n    /**\n     * This function is called when the tree node is successfully modified by your\n     * callback and can no be setted as state in your component.\n     * \n     * @callback module:react-aiot/util#updateTreeItemByIdSetState\n     * @param {object[]} tree The new {@link module:react-aiot/components/TreeNode|TreeNode} properties\n     */\n    setState && newTree[0] && setState(newTree);\n}\n\nfunction _findTreeItemById(id, tree = [], callback, parentId = 0) {\n    for (let i = 0; i < tree.length; i++) {\n        if (tree[i].id === id) {\n            callback(tree[i], parentId);\n            break;\n        }else if (tree[i].childNodes) {\n            _findTreeItemById(id, tree[i].childNodes, callback, tree[i].id);\n        }\n    }\n}\n\n/**\n * Get the parent id of a tree node.\n * \n * @param {string|int} id The id which you want to fetch the parent of \n * @param {object[]} tree {@link module:react-aiot/components/TreeNode|TreeNode} properties\n * @param {string|int} [parentId=0] If the item has no parent this id is returned\n * @returns {string|int} Can also return undefined if not found\n */\nexport function getTreeParentById(id, tree, parentId = 0) {\n    let found;\n    _findTreeItemById(id, tree, (node, parentId) => (found = parentId), parentId);\n    return found;\n}\n\n/**\n * Get the tree node by id.\n * \n * @param {string|int} id The id\n * @param {object[]} tree {@link module:react-aiot/components/TreeNode|TreeNode} properties\n * @returns {object}\n */\nexport function getTreeItemById(id, tree) {\n    let found;\n    _findTreeItemById(id, tree, node => (found = node));\n    return found;\n}\n\n/**\n * Builds an ordered parent pairs array.\n * \n * @param {object[]} [tree=[]] The tree\n * @paremt {string|int} [rootId=0] The root id\n * @returns {object[]} With fid (node id) and the given pid (parent id)\n */\nexport function buildOrderedParentPairs(tree = [], rootId = 0) {\n    const pairs = [], mapper = function(node) {\n        pairs.push({ fid: node.id, pid: this });\n        node.childNodes && node.childNodes.forEach(mapper.bind(node.id));\n    };\n    tree.forEach(mapper.bind(rootId));\n    return pairs;\n}\n\n/**\n * Checks if two flat arrays are equal.\n */\nexport function flatArrayEqual(arr1, arr2) {\n    if(arr1.length !== arr2.length)\n        return false;\n    for(let i = arr1.length; i--;) {\n        if(arr1[i] !== arr2[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n * \n * @see https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie-with-jquery\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n       // Edge (IE 12+) => return version number\n       return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Shim layer with setTimeout fallback\n * \n * @see https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());","/** @module react-aiot/components/Header */\nimport React from 'react';\nimport { Toolbar, Creatable, Spin } from '.';\n\n/**\n * Render the header with headline, {@link module:react-aiot/components/Creatable|Creatable buttons} buttons\n * and {@link module:react-aiot/components/Toolbar|Toolbar}. In this part the sticky component is ensured and\n * you do not have to worry about it.\n * \n * @param {object} props Properties\n * @param {React.Element|string} props.headline The headline\n * @param {object} [props.creatable] The creatables configuration\n * @param {object<key,object>} props.creatable.buttons The buttons. The key is the unique\n *      button key and the object represents the {@link module:react-aiot/components/Creatable|Creatable} properties.\n * @param {object} props.creatable.backButton If isCreatableLinkCancel is true this button is showed ({@link module:react-aiot/components/Creatable|Creatable} properties)\n * @param {boolean} [props.isCreatableLinkDisabled] Allows to disable all creatable buttons\n * @param {boolean} [props.isCreatableLinkCancel] If true the props.creatable.backButton is parsed as Creatable button\n * @param {boolean} [props.isToolbarActive] If true the toolbar buttons are enabled (see {@link module:react-aiot/components/Toolbar|Toolbar})\n * @param {boolean} [props.isToolbarBusy] If true the toolbar is overlayed with a spinning loader (see {@link module:react-aiot/components/Toolbar|Toolbar})\n * @param {object} [props.toolbar] The toolbar configuration (see {@link module:react-aiot/components/Toolbar|Toolbar})\n * @param {object<key,object>} [props.toolbar.buttons] The toolbar buttons\n * @param {object} [props.toolbar.backButton] The toolbar back button. Is showed if toolbarActiveButton is set\n * @param {string} [props.toolbarActiveButton] The active toolbar button (must match the same as the object key of the button)\n * @param {boolean} [props.isBusyHeader] If true the header is overlayed with a spinning loader\n */\nexport default ({\n    headline,\n    creatable,\n    isCreatableLinkDisabled,\n    isCreatableLinkCancel,\n    isToolbarActive,\n    isToolbarBusy,\n    toolbar,\n    toolbarActiveButton,\n    isBusyHeader\n}) => <Spin spinning={ !!isBusyHeader } size=\"small\">\n    <div className=\"aiot-tree-headline\">\n        { headline }\n        { !isCreatableLinkCancel ? Object.keys(creatable.buttons).map(key => \n            ( <Creatable key={ key } type={ key } {...creatable.buttons[key]} isCreatableLinkDisabled={ isCreatableLinkDisabled } /> ) )\n            : <Creatable { ...creatable.backButton } type=\"_aio_cancel\" /> }\n    </div>\n    <Toolbar isToolbarActive={ isToolbarActive } isToolbarBusy={ isToolbarBusy } buttons={ toolbar.buttons }\n        backButton={ toolbar.backButton } activeButton={ toolbarActiveButton } />\n</Spin>;","/** @module react-aiot/components/Toolbar */\nimport React from 'react';\nimport { ToolbarButton, Spin } from '.';\n\n/**\n * Renders the toolbar with {@link module:react-aiot/components/ToolbarButton|Toolbar buttons}. If <code>props.activeButton</code> is\n * set all other <code>ToolbarButton</code>`s are disabled expect the <code>props.backButton</code> - then the user clicks on the cancel button (<code>props.backButton.label</code>)\n * and the <code>onCancel</code> callback of the ToolbarButton gets executed.\n * \n * <p>If the ToolbarButton has a valid <code>onSave</code> callback the toolbar has an additional save button (<code>props.backButton.save</code>)\n * - then the user clicks on the save button and the callback gets executed.</p>\n * \n * @param {object} props Properties\n * @param {boolean} [props.isToolbarActive] If true the toolbar buttons are enabled\n * @param {boolean} [props.isToolbarBusy] If true the toolbar is overlayed with a spinning loader\n * @param {object<key,object>} [props.buttons] The toolbar buttons (see {@link module:react-aiot/components/ToolbarButton|ToolbarButton})\n * @param {object} [props.backButton] The toolbar back button (see {@link module:react-aiot/components/ToolbarButton|ToolbarButton})\n * @param {React.Element|string} [props.backButton.label] This label represents the cancel button\n * @param {React.Element|string} [props.backButton.save] This label represents the save button\n * @param {string} [props.activeButton] The active toolbar button (must match the same as the object key of the button)\n * @extends React.Component\n */\nexport default class Toolbar extends React.Component {\n    handleCancelClick = cancelNode => {\n        const originalNode = this.props.buttons[this.props.activeButton];\n        originalNode && originalNode.onCancel && originalNode.onCancel(cancelNode, originalNode);\n    }\n    \n    render() {\n        const { isToolbarActive, isToolbarBusy, buttons, backButton, activeButton } = this.props, activeActions = [],\n            hasActionButtonSave = activeButton && buttons[activeButton].onSave;\n        \n        activeButton && activeActions.push(\n            <ToolbarButton key=\"activeButtonCancel\" content={ backButton.label } onClick={ this.handleCancelClick } />);\n        hasActionButtonSave && activeActions.push(\n            <ToolbarButton key=\"activeButtonSave\" content={ backButton.save } onClick={ hasActionButtonSave } />);\n            \n        return <Spin spinning={ isToolbarBusy } size=\"small\">\n            <div className=\"aiot-toolbar\">\n            \t<div className=\"aiot-toolbar-items\">\n            \t    { activeButton ? activeActions : Object.keys(buttons).map(key => {\n            \t        return <ToolbarButton key={ key } {...buttons[key]}\n            \t            disabled={ !isToolbarActive ? true : buttons[key].disabled } />;\n            \t    } ) }\n            \t</div>\n            \t<div className=\"clear\"></div>\n            </div>\n        </Spin>;\n    }\n}","/** @module react-aiot/components/ToolbarButton */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Tooltip, Dropdown, Menu } from '.';\n\n/**\n * Toolbar button for the {@link module:react-aiot/components/Toolbar|Toolbar} component.\n * \n * @param {object} props Properties\n * @param {boolean} [props.visible=true] Is the element visible?\n * @param {React.Element|string} [props.content] The button content\n * @param {string} [props.cssClasses] The cssClasses for the link (a) DOMElement\n * @param {React.Element|string} [props.toolTipTitle] The tooltip title\n * @param {React.Element|string} [props.tooltipText] The tooltip text. If you want to show a tooltip you need to set a toolTipTitle, too.\n * @param {boolean} [props.disabled] If true the button can not be clicked\n * @param {React.Element} [props.menu] A menu implementation (see https://ant.design/components/menu/). You can wrap an menu item with\n *                                      Tooltip (do not forget css class <code>overlayClassName=\"aiot-toolbar-menu\"</code>)\n * @param {string} [toolTipPlacement] Placement for the tooltip\n * @param {string} [dropdownPlacement] Placement for overlay of the dropdown (menu)\n * @extends React.Component\n */\nexport default class ToolbarButton extends React.Component {\n    handleClick = e => {\n        if (!this.props.disabled) {\n            this.props.onClick && this.props.onClick(this.props);\n        }\n        e.preventDefault();\n    }\n    \n    render() {\n        // @TODO <Menu onClick={handleMenuClick}\n        const { visible = true, content, cssClasses, toolTipTitle, toolTipText, disabled, menu,\n            toolTipPlacement, dropdownPlacement, modifier } = this.props,\n            className = classNames(cssClasses, 'aiot-tooltip', {\n                'aiot-disabled': disabled\n            }), bodyAttr = { href: '#', className, disabled, onClick: this.handleClick };\n        if (!visible) {\n            return null;\n        }\n        let body = <a {...bodyAttr}>{ content }</a>;\n        \n        modifier && (body = modifier(body, this.props));\n        \n        // Make tooltip\n        if (toolTipTitle && toolTipText) {\n            body = <Tooltip placement={ toolTipPlacement ? toolTipPlacement : (menu ? 'rightTop': 'bottom') }\n                title={ toolTipTitle } content={ toolTipText }>{ body }</Tooltip>;\n        }\n        \n        // Make dropdown with menu items\n        if (menu) {\n            let overlay = menu;\n            if (menu.map) {\n                const overlayMenu = menu.map(({ key, label, toolTipTitle, toolTipText, ...rest }) => {\n                    const menuItem = <Menu.Item key={ key } {...rest}>{ label }</Menu.Item>;\n                    return toolTipTitle && toolTipText\n                        ? <Tooltip overlayClassName=\"aiot-toolbar-menu\" placement=\"rightTop\" title={ toolTipTitle } content={ toolTipText }>{ menuItem }</Tooltip>\n                        : menuItem;\n                });\n                overlay = <Menu>{ overlayMenu }</Menu>;\n            }\n            body = <Dropdown placement={ dropdownPlacement ? dropdownPlacement : 'bottomRight' } overlay={ overlay }>{ body }</Dropdown>;\n        }\n        \n        return body;\n    }\n}","/** @module react-aiot/components/Creatable */\nimport classNames from 'classnames';\nimport { Tooltip } from '.';\n\n/**\n * A creatable button is next to the headline. The use case for\n * a creatable button is for example the \"Create folder\" button.\n * \n * @param {object} props Properties\n * @param {boolean} [props.visible=true] Determines to show the creatable button\n * @param {string} props.type The type (also data-aio-type to the button DOMElement)\n * @param {string} [props.cssClasses] The cssClasses for the button DOMElement\n * @param {boolean} [props.isCreatableLinkDisabled] If true the button is disabled\n * @param {React.Element|string} [props.toolTipTitle] The tooltip title\n * @param {React.Element|string} [props.tooltipText] The tooltip text. If you want to show a tooltip you need to set a toolTipTitle, too.\n * @param {React.Element} [props.icon] The icon before the label\n * @param {React.Element|string} [props.label] The label for the button\n * @param {module:react-aiot/components/Creatable#onClick} [props.onClick]\n * @returns React.Element\n */\nexport default ({\n    visible = true,\n    type,\n    cssClasses,\n    isCreatableLinkDisabled,\n    toolTipTitle,\n    toolTipText,\n    icon,\n    label,\n    /**\n     * The creatable button is pressed.\n     * \n     * @callback module:react-aiot/components/Creatable#onClick\n     * @param {string} type The creatable type\n     */\n    onClick\n}) => {\n    if (!visible) return null;\n    \n    const className = classNames(cssClasses, {\n            'aiot-disabled': isCreatableLinkDisabled\n        }), body = <button data-aio-type={ type } className={ className } onClick={ () => onClick && onClick(type) }>\n            { icon } { label }\n        </button>;\n    \n    return toolTipTitle\n        ? <Tooltip title={ toolTipTitle } content={ toolTipText }>{ body }</Tooltip>\n        : body;\n};","/** @module react-aiot/components/ResizeButton */\nimport React from 'react';\nimport { touchable, resizeOpposite } from '../util';\n\n/**\n * Resize button with resizer (three vertical dots) and collapse button.\n * \n * @param {object} props Properties\n * @param {string} props.containerId The container id which should be resized and contains the resize button\n * @param {DOMElement} [props.opposite] The opposite which gets also resized (width: calc() method)\n * @param {int} [props.oppositeOffset] The offset reduced width in px\n * @param {int} [props.restoreWidth] The restored width in px (if you save in localStorage for example)\n * @param {int} props.initialWidth If restoreWidth is not setted this width in px is used\n * @param {int} [props.minWidth] The minimum width in px\n * @param {int} [props.maxWidth] The maximum width in px\n * @param {module:react-aiot/components/ResizeButton#onResizeFinished} [props.onResizeFinished]\n * @extensd React.Component\n */\nexport default class ResizeButton extends React.Component {\n    static stateKeys = 'defaultRestoreWidth,restoreWidth'.split(',');\n    \n    currentlyResizing = false;\n    \n    constructor(props) {\n        super(props);\n        const { initialWidth, minWidth, restoreWidth } = props,  \n            defaultRestoreWidth = typeof initialWidth === 'number' ? initialWidth : minWidth;\n        this.state = {\n            defaultRestoreWidth,\n            restoreWidth: restoreWidth || defaultRestoreWidth\n        };\n    }\n    \n    /**\n     * Avoid rerender of the resizebutton during resizing.\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        const changedState = ResizeButton.stateKeys.filter(k => this.state[k] !== nextState[k]);\n        if (changedState.length === 1 && changedState[0] === 'restoreWidth') {\n            return false;\n        }\n        return true;\n    }\n    \n    componentDidMount() {\n        // Add handler to the resize button\n        this._getContainer('.aiot-split-resizer').addEventListener(touchable.down, this.handleMouseDown);\n        document.addEventListener(touchable.up, this.handleMouseUp);\n        \n        // Initialize resize width\n        const defaultRestoreWidth = this.state.defaultRestoreWidth;\n        this.handleResize(defaultRestoreWidth);\n        this.props.onResizeFinished && this.props.onResizeFinished(defaultRestoreWidth);\n    }\n    \n    handleDoubleClick = () => {\n        const width = this._getContainerWidth() > 0 ? 0 : this.state.restoreWidth;\n        this.handleResize(width);\n        this.props.onResizeFinished && this.props.onResizeFinished(width);\n    }\n    \n    handleMouseDown = ev => {\n        ev.preventDefault();\n        document.addEventListener(touchable.move, this.handleResize);\n        this.currentlyResizing = true;\n    }\n    \n    handleMouseUp = ev => {\n        document.removeEventListener(touchable.move, this.handleResize);\n        /**\n         * This function is called when the container is resized.\n         * \n         * @callback module:react-aiot/components/ResizeButton#onResizeFinished\n         * @param {int} width The width in px\n         */\n        this.currentlyResizing && this.props.onResizeFinished\n            && this.props.onResizeFinished(this._getContainerWidth());\n        \n        this.currentlyResizing = false;\n    }\n    \n    handleOpposite = width => {\n        return resizeOpposite(this._container.id, this.props.opposite.id, width);\n    }\n    \n    handleResize = (ev, force) => {\n        const { minWidth, maxWidth } = this.props,\n            isEvent = !!(ev && ev.pageX);\n        let x = (isEvent\n                ? ev.pageX - (this._container.getBoundingClientRect().left + document.body.scrollLeft) - 15\n                : ev), // Offset\n            move = x >= minWidth && x <= maxWidth;\n        \n        // Prevent default if event\n        isEvent && ev.preventDefault();\n        \n        // Allow collapse\n        x < minWidth - 50 && (move = x = 1);\n        \n        const collapse = move === 1, xOpposite = x + this.props.oppositeOffset;\n        window.requestAnimationFrame(() => {\n            if ((move || force) && this.handleOpposite(collapse ? x : xOpposite) !== false) {\n                this._container.style.width = xOpposite + 'px';\n                !collapse && this.setState({ restoreWidth: x });\n                /**\n                 * This function is called while container gets resized.\n                 * \n                 * @callback module:react-aiot/components/ResizeButton#onResize\n                 * @param {int} width The width in px\n                 * @param {boolean} collapsed If true the sidebar is collapsed\n                 */\n                this.props.onResize && this.props.onResize(x, collapse);\n            }\n        });\n    }\n    \n    render() {\n        return <span className=\"aiot-split\">\n            <div className=\"aiot-split-resizer\" />\n            <div className=\"aiot-split-collapse\" onClick={ this.handleDoubleClick } />\n        </span>;\n    }\n    \n    _getContainer(find, singleFind = true) {\n        const elem = document.getElementById(this.props.containerId),\n            findObj = find ? elem && elem.querySelectorAll(find) : elem;\n        this._container = elem;\n            \n        if (find && singleFind) {\n            return findObj && findObj[0];\n        }\n            \n        return findObj;\n    }\n    \n    _getContainerWidth() {\n        const computed = window.getComputedStyle(this._container),\n            width = parseInt(computed.width, 10);\n        return width - parseInt(computed.borderLeftWidth, 10) - parseInt(computed.borderRightWidth, 10);\n    }\n}","/** @module react-aiot/components/Tooltip */\nimport Popover from 'antd/lib/popover';\nimport 'antd/lib/popover/style/index.css';\n\n/**\n * Custom All-In-One Tree tooltip implementation with the help of antd-design.\n * \n * @param {object} props Properties\n * @param {string} [props.placement='bottom'] The placement\n * @param {React.Element|string} [props.children] The children which should get the tooltip\n * @param {React.Element|string} [props.title] The tooltip title\n * @param {React.Element|string} [props.content] The tooltip content\n * @param {float} [props.mouseEnterDelay=0.2] The mouse enter delay\n * @param {float} [props.mouseLeaveDelay=0] The mouse leave delay\n * @see https://ant.design/components/popover/\n */\nexport default ({\n    placement = 'bottom',\n    children,\n    title,\n    content,\n    mouseEnterDelay = 0.2,\n    mouseLeaveDelay = 0,\n    ...rest\n}) => {\n    const popoverContent = <div style={{ fontSize: 12, maxWidth: 200 }}>\n        <div style={{ fontWeight: 'bold', fontSize: 14, paddingBottom: 5, marginBottom: 3, borderBottom: '1px solid rgba(255,255,255,0.3)' }}>{ title }</div>\n        { content }\n    </div>;\n    \n    return <Popover content={ popoverContent } placement={ placement } mouseEnterDelay={ mouseEnterDelay } \n        mouseLeaveDelay={ mouseLeaveDelay } {...rest}>\n        { children }\n    </Popover>;\n};","/** @module react-aiot/components/TreeNode */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Spin } from '.';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport { flatArrayEqual, parents } from '../util';\n\n/**\n * Tree node with child nodes and rename / create mode.\n * \n * @param {object} props Properties\n * @param {string|id} props.id The unique id for this node. Added as data-li-id to the li DOMElement and as data-id to the .aiot-node div-DOMElement\n * @param {string} [props.hash=''] Use this field to force rerender of the node. This is useful if you use a state management library like mobx-state-tree and try to splice a child node.\n * @param {string} [props.className] Additional class name for the .aiot-node div DOMElement\n * @param {React.Element} [props.icon] The icon before the title\n * @param {React.Element} [props.iconActive] The active icon before the title (replaces icon)\n * @param {object[]} [props.childNodes=[]] If setted it must be a {@link module:react-aiot/components/TreeNode|TreeNode} property object array and it is added as child node to the current node\n * @param {string} [props.title] The title\n * @param {string} [props.count] The count\n * @param {object<key,string>} [props.attr] Additional attributes for the .aiot-node div DOMElement\n * @param {React.Element|string} [props.renameSaveText] If $rename is true this button text is showed next to the input field\n * @param {React.Element|string} [props.renameAddText] If $create is true this button text is showed next to the input field of the new created node\n * @param {boolean} [props.$busy] If true the node gets overlayed by a spinning loader\n * @param {boolean} [props.$droppable=true] If true the .aiot-node gets the additional class .aiot-droppable\n * @param {boolean} [props.$visible=true] If true this node is rendered\n * @param {boolean} [props.$rename] If true the title is replaced with an input field\n * @param {object} [props.$create] If setted it must be a {@link module:react-aiot/components/TreeNode|TreeNode} property map and it is added as child node to the current node\n * @param {boolean} [props.searchSelected] If true the .aiot-node gets the additional class .aiot-search-selected\n * @param {boolean} [props.expandedState=true] If true the child nodes of this node are rendered\n * @param {boolean} [props.displayChildren=true] If true the child nodes are renderable\n * @param {boolean} [props.selected] The selected ids. If the selected ids contains the current id the .aiot-node gets an additional class .aiot-active\n * @param {module:react-aiot/components/TreeNode#onRenameClose} [props.onRenameClose] \n * @param {module:react-aiot/components/TreeNode#onAddClose} [props.onAddClose] \n * @param {module:react-aiot/components/TreeNode#onSelect} [props.onSelect] \n * @param {module:react-aiot/components/TreeNode#onNodePressF2} [props.onNodePressF2] \n * @param {module:react-aiot/components/TreeNode#onExpand} [props.onExpand] \n * @param {module:react-aiot/components/TreeNode#onUlRef} [props.onUlRef] \n * @extends React.Component\n */\nexport default class TreeNode extends React.Component {\n    static defaultProps = {\n        id: undefined,\n        hash: '',\n        className: undefined,\n        icon: undefined,\n        iconActive: undefined,\n        childNodes: [],\n        title: '',\n        count: 0,\n        attr: {},\n        renameSaveText: 'Save',\n        renameAddText: 'Add',\n        $busy: false,\n        $droppable: true,\n        $visible: true,\n        $rename: undefined,\n        $create: undefined,\n        searchSelected: false,\n        expandedState: true,\n        displayChildren: true,\n        selected: false,\n        onRenameClose: undefined,\n        onAddClose: undefined,\n        onSelect: undefined,\n        onNodePressF2: undefined,\n        onExpand: undefined,\n        onUlRef: undefined\n    }\n    \n    static stateKeys = 'expanded,inputValue,initialInputValue'.split(',')\n    \n    constructor(props) {\n        super(props);\n        !TreeNode.propKeys && (TreeNode.propKeys = Object.keys(TreeNode.defaultProps));\n        \n        // Get expanded state\n        const { id, expandedState } = props,\n            expanded = id && typeof expandedState[id] === 'boolean' ? expandedState[id] : true;\n        \n        this.state = {\n            expanded,\n            inputValue: '',\n            initialInputValue: false\n        };\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        const changedProps = TreeNode.propKeys.filter(k => this.props[k] !== nextProps[k]),\n            changedState = TreeNode.stateKeys.filter(k => this.state[k] !== nextState[k]);\n        if (!changedProps.length && !changedState.length) { // Nothing changed\n            return false;\n        }\n        \n        return true;\n    }\n    \n    componentDidUpdate() {\n        const { title, $rename, $_create, searchSelected } = this.props;\n        \n        // Scroll to search result\n        searchSelected && this.scrollTo();\n        \n        // Avoid controlled / uncontrolled switch when creating a new node\n        if ($_create) {\n            return;\n        }\n        \n        if (this.state.inputValue !== title && $rename && !this.state.initialInputValue) {\n            this.setState({ inputValue: title, initialInputValue: true });\n        }else if (!$rename && this.state.initialInputValue) {\n            this.setState({ inputValue: '', initialInputValue: false });\n        }\n    }\n    \n    handleInputKeyDown = e => {\n        if (e.key === 'Enter') {\n            this.handleButtonSave(true);\n        }else if (e.key === 'Escape') {\n            this.handleButtonSave(false);\n        }\n    }\n    \n    handleNodeKeyDown = e => {\n        if (e.key === 'F2' && !this.props.$rename) {\n            /**\n             * This function is called when a tree node is active and F2 is pressed.\n             * Useful to activate the rename process.\n             * \n             * @callback module:react-aiot/components/TreeNode#onNodePressF2\n             * @param {object} props passed to the TreeNode component\n             */\n            this.props.onNodePressF2 && this.props.onNodePressF2(this.props);\n        }\n    }\n    \n    handleButtonSave = save => {\n        const _save = typeof save === 'boolean' ? save : true,\n            inputValue = this.state.inputValue;\n        /**\n         * This function is called when a new tree node should be saved or the\n         * add process is cancelled.\n         * \n         * @callback module:react-aiot/components/TreeNode#onAddClose\n         * @param {boolean} save If true the node should be saved instead of cancelled\n         * @param {string} inputValue The name for the node\n         * @param {object} props passed to the TreeNode component\n         */\n        if (_save === true && !inputValue) {\n            return;\n        }\n        \n        /**\n         * This function is called when a tree node is in rename mode and\n         * the rename mode gets closed (ESC), cancelled or saved.\n         * \n         * @callback module:react-aiot/components/TreeNode#onRenameClose\n         * @param {boolean} save If true the node should be saved instead of cancelled\n         * @param {string} inputValue The name for the node\n         * @param {object} props passed to the TreeNode component\n         */\n        this.props.onRenameClose && this.props.onRenameClose(_save, inputValue, this.props);\n    }\n    \n    handleChange = e => {\n        this.setState({ inputValue: e.target.value });\n    }\n    \n    handleSelect = e => {\n        if (!parents(e.target, '.aiot-disable-links').length) {\n            /**\n             * This function is called when a tree node gets selected.\n             * \n             * @callback module:react-aiot/components/TreeNode#onSelect\n             * @param {string|int} id The node id\n             */\n            this.props.onSelect && this.props.onSelect(this.props.id);\n        }\n    }\n    \n    handleToggle = e => {\n        const newExpanded = !this.state.expanded,\n            onExpand = this.props.onExpand;\n        this.setState({ expanded: newExpanded });\n        /**\n         * This function is called when a tree node is expanded or collapsed\n         * \n         * @callback module:react-aiot/components/TreeNode#onExpand\n         * @param {boolean} expanded If true the childrens are visible\n         * @param {object} props passed to the TreeNode component\n         */\n        onExpand && onExpand(newExpanded, this.props);\n        e.preventDefault();\n    }\n    \n    handleRef = node => {\n        this.refNode = node;\n        this.props.$_create && this.scrollTo();\n    }\n    \n    scrollTo() {\n        const container = this.refNode;\n        container && scrollIntoView(container, window, { onlyScrollIfNeeded: true, alignWithTop: false });\n    }\n    \n    render() {\n        const { icon, childNodes = [], id, title, count, selected, $rename, $busy, $droppable = true,\n                $create, $visible = true, $_create, searchSelected, attr } = this.props,\n            nodeAttr = { expandedState, displayChildren, renderItem, onRenameClose,\n                onAddClose, onSelect, onNodePressF2, onExpand, onUlRef, renameSaveText, renameAddText } = this.props,\n            visibleChildNodes = childNodes && childNodes.filter(({ $visible = true }) => !!$visible),\n            togglable = !!(displayChildren && visibleChildNodes && visibleChildNodes.length),\n            isExpanded = this.state.expanded || !!$create,\n            isActive = $create ? false : $_create ? true : selected,\n            className = classNames('aiot-node', this.props.className, {\n                'aiot-active': isActive,\n                'aiot-forceEnable': !!$rename,\n                'aiot-togglable': togglable,\n                'aiot-expanded': this.state.expanded,\n                'aiot-search-selected': searchSelected,\n                'aiot-droppable': $droppable && !$_create\n            });\n        \n        // Tree node perhaps deleted?\n        if (!$visible) {\n            return null;\n        }\n\n        // Get icon\n        const useIcon = selected ? this.props.iconActive || this.props.icon : icon,\n            useIconObj = <div className=\"aiot-node-icon\">{ useIcon }</div>;\n            \n        // Sortable\n        const isUlVisible = togglable && isExpanded,\n            isSortable = !!displayChildren /*@TODO && !isTreeLinkDisabled*/ && !$_create,\n            /**\n             * This function is called when a tree node is expanded or collapsed\n             * \n             * @callback module:react-aiot/components/TreeNode#onUlRef\n             * @param {DOMElement} ref The reference\n             * @param {string|id} id The node id\n             */\n            refSortable = ref => displayChildren && ref && onUlRef && onUlRef(ref, id);\n        !isUlVisible && displayChildren && onUlRef && onUlRef(undefined, id);\n        \n        const createTreeNode = node => (<TreeNode key={ node.id } {...node} {...nodeAttr}/>);\n\n        // Result\n        return <li className={ classNames({ 'aiot-sortable': isSortable }) } data-li-id={ id }>\n            <Spin spinning={ !!$busy } size=\"small\">\n                <div data-id={ id } tabIndex=\"0\" className={ className } onClick={ $_create ? undefined : this.handleSelect }\n                    onDoubleClick={ $_create ? undefined : this.handleToggle } onKeyDown={ this.handleNodeKeyDown } {...attr} ref={ this.handleRef }>\n                    { useIconObj }\n                    { $rename\n                        ? <input autoFocus className=\"aiot-node-name\" value={ this.state.inputValue }\n                            onChange={ this.handleChange } onKeyDown={ this.handleInputKeyDown } />\n                        : <div className=\"aiot-node-name\">{ title }</div> }\n                    { count > 0 && !$rename && <div className=\"aiot-node-count\">{ count }</div> }\n                    { $rename && <button disabled={ !this.state.inputValue } onClick={ this.handleButtonSave }>{ renameSaveText }</button> }\n                </div>\n            </Spin>\n            \n            { isUlVisible && <ul className={ classNames({ 'aiot-sortable-one': childNodes.length === 1 }) } data-childs-for={ id } ref={ refSortable }>\n                { childNodes.map(node => {\n                    if (renderItem) {\n                        return renderItem(createTreeNode, TreeNode, node);\n                    }else{\n                        return createTreeNode(node);\n                    }\n                } ) }\n                { childNodes.length === 1 && <li className={ classNames('aiot-sortable-placeholder', { 'aiot-sortable': isSortable }) }></li> }\n                { !!$create && <TreeNode $_create onRenameClose={ onAddClose } renameSaveText={ renameAddText } {...$create} /> }\n            </ul> }\n            \n            { !childNodes.length && isSortable && <ul data-childs-for={ id } ref={ refSortable } className=\"aiot-sortable-empty\" /> }\n            \n            { !!$create && !togglable && <ul>\n                <TreeNode $_create onRenameClose={ onAddClose } renameSaveText={ renameAddText } {...$create} />\n            </ul> }\n            \n            { togglable && <div onClick={ this.handleToggle }\n                className={ classNames('aiot-expander', { 'aiot-open': isExpanded }) } /> }\n        </li>;\n    }\n}","/** @module react-aiot/components */\nimport Header from './Header';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport Creatable from './Creatable';\nimport ResizeButton from './ResizeButton';\nimport Tooltip from './Tooltip';\nimport TreeNode from './TreeNode';\n\n// General antd components\nimport Dropdown from 'antd/lib/dropdown';\nimport Menu from 'antd/lib/menu';\nimport Button from 'antd/lib/button';\nimport Input from 'antd/lib/input';\nimport Alert from 'antd/lib/alert';\nimport Spin from 'antd/lib/spin';\nimport message from 'antd/lib/message';\nimport Icon from 'antd/lib/icon';\nimport Popconfirm from 'antd/lib/popconfirm';\nimport '../style/antd.less';\nimport 'antd/lib/dropdown/style/index.css';\nimport 'antd/lib/menu/style/index.css';\nimport 'antd/lib/button/style/index.css';\nimport 'antd/lib/input/style/index.css';\nimport 'antd/lib/alert/style/index.css';\nimport 'antd/lib/spin/style/index.css';\nimport 'antd/lib/message/style/index.css';\nimport 'antd/lib/popover/style/index.css';\n\n/**\n * Spinning busy icon.\n * \n * @function\n * @returns React.Element\n */\nexport const BusyIcon = () => <Icon type=\"loading\" spin />;\n\nexport {\n    /**\n     * @type module:react-aiot/components/Header\n     */\n    Header,\n    /**\n     * @type module:react-aiot/components/Toolbar\n     */\n    Toolbar,\n    /**\n     * @type module:react-aiot/components/ToolbarButton\n     */\n    ToolbarButton,\n    /**\n     * @type module:react-aiot/components/Creatable\n     */\n    Creatable,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/dropdown/\n     */\n    Dropdown,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/menu/\n     */\n    Menu,\n    /**\n     * @type module:react-aiot/components/ResizeButton\n     */\n    ResizeButton,\n    /**\n     * @type module:react-aiot/components/Tooltip\n     */\n    Tooltip,\n    /**\n     * @type module:react-aiot/components/TreeNode\n     */\n    TreeNode,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/button/\n     */\n    Button,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/input/\n     */\n    Input,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/alert/\n     */\n    Alert,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/spin/\n     */\n    Spin,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/message/\n     */\n    message,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/icon/\n     */\n    Icon,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/popconfirm/\n     */\n    Popconfirm\n};","/**\n * Sticky and resizable All-In-One-Tree with sortable nodes and a nice looking toolbar.\n * This module provides an exported default Tree component and some helper functions.\n * \n * <p>Used dependencies:\n * <ul>\n *  <li><strong>{@link https://npmjs.com/package/antd/|antd}:</strong> UI library components. Only a few components are imported, see {@link module:react-aiot/components|components}.</li>\n *  <li><strong>{@link https://npmjs.com/package/dom-scroll-into-view/|dom-scroll-into-view}:</strong> Scroll DOM element into view port</li>\n *  <li><strong>{@link https://npmjs.com/package/immer/|immer}:</strong> Create the next immutable state by mutating the current one</li>\n *  <li><strong>{@link https://npmjs.com/package/react-stickynode/|react-stickynode}:</strong> Create sticky components</li>\n *  <li><strong>{@link https://npmjs.com/package/sortablejs/|sortablejs}:</strong> Make the tree sortable</li>\n * </ul></p>\n * \n * <p>Builds:\n * <ul>\n *  <li>The usual build is excluding react and react-dom.</li>\n *  <li>If you are using the UMD version in your browser you also have to add <code>immer</code> and <code>sortablejs</code> to your scripts.</li>\n * </ul></p>\n * @module react-aiot\n */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport { uuid, Storage, SUPPORTS_LOCAL_STORAGE, updateTreeItemById, getTreeItemById, buildOrderedParentPairs, getTreeParentById, detectIE } from './util';\nimport { handleSearch, handleSearchBlur, handleSearchClose, handleSearchKeyDown } from './util';\nimport { handleSortableTree, handleSortableTreeWillUpdate } from './util';\nimport { Header, ResizeButton, TreeNode, Input, BusyIcon, Alert, Spin, Icon,\n    Toolbar, ToolbarButton, Creatable, Dropdown, Menu, Tooltip, Button, message, Popconfirm } from './components';\nimport Sticky from 'react-stickynode';\nimport './style/style.scss';\n\n/**\n * AIO properties\n * \n * @typedef module:react-aiot~Tree~Properties\n * @property {string} [theme='default'] The theme, appended as class aiot-theme-{theme} to the rendered <div>\n * @property {string} [id] The id for the rendered <div>, otherwise an unique id is generated\n * @property {string} [className] Additional classnames\n * @property {string} [innerClassName] Additional classnames for the inner wrapper (.aiot-pad)\n * @property {object} [attr] Additional attributes for the rendered <div>\n * @property {boolean} [isSticky=false] If true the sidebar gets sticky\n * @property {boolean} [isStickyHeader=false] If true the sidebar header gets sticky\n * @property {boolean} [isBusyHeader=false] Mark the header with a spinning loader\n * @property {object} [treeStickyAttr] Sticky options (see {@link https://github.com/yahoo/react-stickynode|react-stickynode})\n * @property {object} [headerStickyAttr] Sticky options (see {@link https://github.com/yahoo/react-stickynode|react-stickynode})\n * @property {boolean} [isResizable=false] If true the sidebar is resizable and collapsable\n * @property {boolean} [isFullWidth=false] If true the width of the sidebar is ignored and no longer resizable\n * @property {int} [defaultWidth=250] The width in px. If there is already a width for this id in the local storage the default width is ignored\n * @property {int} [minWidth=250] Forwarded to {@link module:react-aiot/components/ResizeButton|ResizeButton}\n * @property {int} [maxWidth=800] Forwarded to {@link module:react-aiot/components/ResizeButton|ResizeButton}\n * @property {DOMElement} [opposite] Forwarded to {@link module:react-aiot/components/ResizeButton|ResizeButton}\n * @property {int} [oppositeOffset=16] Forwarded to {@link module:react-aiot/components/ResizeButton|ResizeButton}\n * @property {boolean} [isCreatableLinkDisabled=false] If true no new folder can be created\n * @property {boolean} [isCreatableLinkCancel=false] If true the creatable buttons are replaced with a Cancel button\n * @property {boolean} [isToolbarActive=true] If false the toolbar buttons can not be clicked\n * @property {boolean} [isToolbarBusy=false] If true the toolbar gets overlayed with a spinning loader\n * @property {string} [toolbarActiveButton] If setted a \"Cancel\" and \"Save\" (optional) button is showed instead of the toolbar buttons\n * @property {string} [headline='Folders'] The headline\n * @property {string} [renameSaveText='Save'] The rename save text. If you are using a React element please use a single instance object (avoid rerendering).\n * @property {string} [renameAddText='Add'] The rename add text If you are using a React element please use a single instance object (avoid rerendering).\n * @property {object} [createRoot] The create node ({@link module:react-aiot/components/TreeNode|TreeNode} properties) when you want to create a new node on the root tree node\n * @property {int} [rootId=0] The root id\n * @property {int} [sortableDelay=100] The delay the user must hold down the node to make it draggable\n * @property {string} [noFoldersTitle='No folders found'] \n * @property {string} [noFoldersDescription='Click the above button to create a new folder.'] \n * @property {string} [noSearchResult='No search results found'] \n * @property {boolean} [searchable=true] Shows a search input field and allows searching by name (simple contains pattern)\n * @property {boolean} [searchInputBusy=false] If true the input field is overlayed with a spinning loader\n * @property {boolean} [isTreeLinkDisabled=false] If true the nodes are no longer clickable (no action)\n * @property {boolean} [isTreeBusy=false] If true the tree is overlayed with a spinning loader\n * @property {boolean} [isSortable=false] If true the node is sortable (see {@link https://github.com/RubaXa/Sortable|sortablejs}). If true the onSort property has to be set.\n * @property {boolean} [isSortableDisabled=false] If true the nodes are not sortable\n * @property {boolean} [isSortableBusy=false] If true all components which are affected by sort process are overlayed with a spinning loader\n * @property {boolean} [forceSortableFallback] See forceFallback in https://github.com/RubaXa/Sortable (only by initialization)\n * @property {module:react-aiot/components/TreeNode#onNodePressF2} [onNodePressF2] \n * @property {module:react-aiot/components/TreeNode#onExpand} [onNodeExpand] \n * @property {module:react-aiot/components/TreeNode#onRenameClose} [onRenameClose] \n * @property {module:react-aiot/components/TreeNode#onAddClose} [onAddClose] \n * @property {module:react-aiot/components/TreeNode#onSelect} [onSelect] \n * @property {module:react-aiot/components/ResizeButton#onResize} [onResize] \n * @property {module:react-aiot/components/ResizeButton#onResizeFinished} [onResizeFinished] \n * @property {module:react-aiot~Tree~onSort} [onSort] \n * @property {function} [onSortStart] SortableJS onSort event\n * @property {function} [onSortEnd] SortableJS onEnd event\n * @property {object[]} [staticTree=[]] {@link module:react-aiot/components/TreeNode|TreeNode} properties. The static tree showed above the search field. The static tree can have no child nodes and is not sortable.\n * @property {object[]} [tree=[]] {@link module:react-aiot/components/TreeNode|TreeNode} properties\n * @property {module:react-aiot~Tree~onSort} [renderItem]\n */\n\n/**\n * The ReactJS All-in-One-Tree.\n * \n * @param {module:react-aiot~Tree~Properties} props ReactJS properties\n * @extends React.Component\n */\nclass Tree extends React.Component {\n    \n    static defaultProps = {\n        theme: 'default',\n        id: '',\n        className: '',\n        innerClassName: '',\n        style: {},\n        attr: {},\n        isSticky: false,\n        isStickyHeader: false,\n        isBusyHeader: false,\n        treeStickyAttr: {},\n        headerStickyAttr: {},\n        isResizable: true,\n        isFullWidth: false,\n        defaultWidth: 250,\n        minWidth: 250,\n        maxWidth: 800,\n        opposite: undefined,\n        oppositeOffset: 16,\n    \n        // Toolbar\n        isCreatableLinkDisabled: false,\n        isCreatableLinkCancel: false,\n        isToolbarActive: true,\n        isToolbarBusy: false,\n        toolbarActiveButton: undefined,\n        headline: 'Folders',\n        renameSaveText: 'Save',\n        renameAddText: 'Add',\n        createRoot: undefined,\n        onAddClose: undefined,\n        creatable: {\n            buttons: {\n                folder: {\n                    icon: '<i class=\"fa fa-folder-open\"></i>'\n                }\n            },\n            backButton: {\n                label: 'Cancel',\n                save: 'Done'\n            }\n        },\n        toolbar: {\n            buttons: {\n                rename: {\n                    content: '<i class=\"fa fa-pencil\"></i>'\n                }\n            },\n            backButton: {\n                label: 'Cancel'\n            }\n        },\n        \n        // Tree\n        rootId: 0,\n        sortableDelay: 100,\n        noFoldersTitle: 'No folders found',\n        noFoldersDescription: 'Click the above button to create a new folder.',\n        noSearchResult: 'No search results found',\n        searchable: true,\n        searchInputBusy: false,\n        isTreeLinkDisabled: false,\n        isTreeBusy: false,\n        isSortable: false,\n        isSortableDisabled: false,\n        isSortableBusy: false,\n        forceSortableFallback: undefined,\n        onNodePressF2: undefined,\n        onNodeExpand: undefined,\n        onRenameClose: undefined,\n        onSelect: undefined,\n        onResize: undefined,\n        /**\n         * This function is called when a node item gets reordered per drag&drop.\n         * \n         * @callback module:react-aiot~Tree~onSort\n         * @param {object} event The event\n         * @param {object} event.evt The original event of sortablejs\n         * @param {DOMElement} event.from From list (ul)\n         * @param {DOMElement} event.to To list (ul)\n         * @param {int} event.oldIndex The old indes within the old list\n         * @param {int} event.newIndex The new index within the new list\n         * @param {string|int} event.id The id of the \n         * @param {DOMElement} event.nextObj The node next to the dragged one\n         * @param {DOMElement} event.prevObj The node prev to the dragged one\n         * @param {string|int} event.nextId The node id next to the dragged one\n         * @param {string|int} event.prevId The node id prev to the dragged one\n         * @param {string|int} event.parentFromId The node id of the from list (parent id)\n         * @param {string|int} event.parentToId The node id of the to list (parent id)\n         * @param {function} event.buildTree You can call this function to get the new tree property for this Tree, you can use it for your <code>setState({ tree: buildTree })</code>.\n         */\n        onSort: undefined,\n        onSortStart: undefined,\n        onSortEnd: undefined,\n        onResizeFinished: undefined,\n        staticTree: [],\n        tree: []\n    }\n    \n    /**\n     * The constructor creates a local storage instance to save\n     * the sidebar width and expand states (if supported and enabled).\n     */\n    constructor(props) {\n        super(props);\n        !Tree.propKeys && (Tree.propKeys = Object.keys(Tree.defaultProps));\n        \n        // State\n        this.state = {\n            uuid: uuid(),\n            collapsed: false,\n            stickyTreeCalculatedTop: undefined,\n            currentlySorting: false,\n            sortingBusy: false, // also available as prop \"isSortableBusy\"\n            \n            // Search results\n            searchTerm: '',\n            resultSelectedNodeIdx: undefined,\n            resultTreeBusy: false,\n            resultTree: undefined\n        };\n        \n        // Localstorage only when id given\n        if (this.props.id && SUPPORTS_LOCAL_STORAGE) {\n            this.storage = new Storage(this.id());\n        }\n        \n        this.handleSearch = handleSearch.bind(this);\n        this.handleSearchBlur = handleSearchBlur.bind(this);\n        this.handleSearchClose = handleSearchClose.bind(this);\n        this.handleSearchKeyDown = handleSearchKeyDown.bind(this);\n        this.handleSortableTree = handleSortableTree.bind(this);\n        this.handleSortableTreeWillUpdate = handleSortableTreeWillUpdate.bind(this);\n    }\n    \n    /**\n     * When the component did mount initialize the sticky sidebar and header.\n     */\n    componentDidMount() {\n        // Calculate offset of tree if tree and header are sticky\n        const { isSticky, isStickyHeader, treeStickyAttr, headerStickyAttr } = this.props,\n            obj = document.querySelector('#' + this.id() + ' .aiot-fixed-header > div');\n        let newTreeCalculatedTop = 0;\n        if (isSticky && isStickyHeader && typeof treeStickyAttr.top === 'undefined' && obj) {\n            newTreeCalculatedTop = obj.offsetHeight;\n            \n            const headerStickyTop = headerStickyAttr.top;\n            if (typeof headerStickyTop === 'string') {\n                const headerStickyTopObj = document.querySelector(headerStickyTop);\n                newTreeCalculatedTop += headerStickyTopObj ? headerStickyTopObj.offsetHeight : 0;\n            }else if (typeof headerStickyTop === 'number'){\n                newTreeCalculatedTop += headerStickyTop;\n            }\n        }\n        \n        // Set sticky tree calculated in state\n        this.setState({ stickyTreeCalculatedTop: newTreeCalculatedTop });\n    }\n    \n    /**\n     * When the component will upate rehandle the sortable tree.\n     */\n    componentWillUpdate(...args) {\n        this.handleSortableTreeWillUpdate(...args);\n    }\n    \n    /**\n     * The sidebar gets resized through the ResizeButton and chain it to\n     * the onResize method.\n     * \n     * @method\n     */\n    handleResize = (x, collapse) => {\n        this.state.collapsed !== collapse && this.setState({ collapsed: collapse });\n        this.props.onResize && this.props.onResize(x, collapse);\n    }\n    \n    /**\n     * The sidebar is resized successfully. Chain it to the onResizeFinished method\n     * and save the width to the local storage if supported and enabled.\n     * \n     * @method\n     */\n    handleResizeFinished = width => {\n        if (this.storage) {\n            this.storage.setItem('width', width);\n            width > 0 && this.storage.setItem('rwidth', width);\n        }\n        this.props.onResizeFinished && this.props.onResizeFinished(width);\n    }\n    \n    /**\n     * A node gets expanded / collapsed. Chain it to the onNodeExpand method and\n     * save the state to the local storage if supported and enabled.\n     * \n     * @method\n     */\n    handleNodeExpand = (expanded, node) => {\n        const onNodeExpand = this.props.onNodeExpand, id = node.id;\n        this.storage && id && this.storage.setItem('expandNodes.' + node.id, expanded);\n        onNodeExpand && onNodeExpand(expanded, node);\n    }\n    \n    /**\n     * Render a tree.\n     * \n     * @param {object[]} tree The tree\n     * @param {boolean} [displayChildren=true] If true the first nodes can have childNodes\n     * @param {object} [createRoot] Shows an additional node after the last one with an input field\n     * @param {string('tree','static','search')} [context='tree'] The tree context\n     * @method\n     */\n    renderTree = (tree, displayChildren = true, createRoot = undefined, context = 'tree') => {\n        const nodeAttr = { renderItem, onRenameClose, onAddClose, onSelect, onNodePressF2, renameSaveText, renameAddText } = this.props,\n            { isTreeLinkDisabled, rootId } = this.props,\n            resultSelectedNodeIdx = this.state.resultSelectedNodeIdx,\n            resultTreeLength = typeof resultSelectedNodeIdx === \"number\" && this.state.resultTree.length,\n            expandedState = this.storage && this.storage.getItem('expandNodes') || {},\n            className = classNames({\n                'aiot-disable-links': isTreeLinkDisabled,\n                'aiot-sortable-one': tree.length === 1\n            });\n        let i = -1;\n        \n        return <ul className={ className } data-childs-for={ rootId } ref={ displayChildren ? this.handleSortableTree : undefined }>\n            { tree.map(node => {\n                i++;\n                const searchSelected = i % resultTreeLength === resultSelectedNodeIdx % resultTreeLength && !displayChildren,\n                    propSearchSelected = context === 'search' ? searchSelected : undefined;\n\n                const createTreeNode = () => (<TreeNode key={ node.id } searchSelected={ propSearchSelected } {...node} onExpand={ this.handleNodeExpand }\n                    expandedState={ expandedState } {...nodeAttr} onUlRef={ displayChildren ? this.handleSortableTree : undefined } displayChildren={ displayChildren } />);\n                    \n                if (renderItem) {\n                    /**\n                     * This function is called when a node item gets reordered.\n                     * \n                     * @callback module:react-aiot~Tree~renderItem\n                     * @param {function} createTreeNode A function that creates the default tree node (helpful for wrapper functions)\n                     * @param {module:react-aiot/components/TreeNode} TreeNode The ReactJS element\n                     * @param {object} node The node item\n                     * @returns {module:react-aiot/components/TreeNode}\n                     */\n                    return renderItem(createTreeNode, TreeNode, node);\n                }else{\n                    return createTreeNode();\n                }\n            } ) }\n            { !!createRoot && <TreeNode $_create onRenameClose={ onAddClose } renameSaveText={ this.props.renameAddText } {...createRoot} /> }\n        </ul>;\n    }\n    \n    /**\n     * Render the tree wrapper. In this part the sticky component is ensured and\n     * you do not have to worry about it.\n     * \n     * @method\n     */\n    renderTreeWrapper = () => {\n        const { isCreatableLinkCancel, createRoot, searchable, searchInputBusy,\n            isTreeBusy, staticTree, tree, isSortableBusy, children,\n            noFoldersTitle, noFoldersDescription, noSearchResult } = this.props,\n            { sortingBusy, searchTerm, resultTree, resultTreeBusy } = this.state;\n        \n        return <div>\n            <div className=\"aiot-nodes\">\n                { children }\n                { staticTree && this.renderTree(staticTree, false, undefined, 'static') }\n                { staticTree && <hr /> }\n                { searchable && <div className=\"aiot-search\">\n                    <Input disabled={ !tree.length || isCreatableLinkCancel || sortingBusy || isSortableBusy } size=\"small\" value={ searchTerm } onChange={ this.handleSearch } onBlur={ this.handleSearchBlur }\n                        onKeyDown={ this.handleSearchKeyDown } suffix={ searchInputBusy || resultTreeBusy\n                            ? <BusyIcon />\n                            : searchTerm.length\n                                ? <Icon type=\"close\" style={{ cursor: 'pointer' }} onClick={ this.handleSearchClose } />\n                                : <Icon type=\"search\" /> } />\n                </div> }\n                <Spin spinning={ !!isTreeBusy || sortingBusy || isSortableBusy } size=\"small\" style={{ minHeight: 50 }}>\n                    { this.renderTree(resultTree || tree, !resultTree, resultTree ? undefined : createRoot, resultTree ? 'search' : 'tree') }\n                </Spin>\n                { tree && !tree.filter(node => node.$visible).length && !isTreeBusy && \n                    <Alert message={ noFoldersTitle } description={ noFoldersDescription } type=\"info\" showIcon /> }\n                { resultTree && !resultTree.length &&\n                    <Alert message={ noSearchResult } type=\"warning\" showIcon /> }\n            </div>\n        </div>;\n    }\n    \n    /**\n     * Render the main wrapper with sticky / resize functionality. It also\n     * renders the Header with headline and toolbar.\n     * \n     * @method\n     */\n    renderWrapper = () => {\n        // Create resize styles\n        const props = this.props,\n            { isResizable, opposite, minWidth, maxWidth, innerClassName,\n             isSticky, isStickyHeader, isSortableBusy, headerStickyAttr, oppositeOffset } = props,\n            { currentlySorting, sortingBusy, searchTerm, stickyTreeCalculatedTop, collapsed } = this.state,\n             \n            // Header\n            headerAttr = { headline, creatable, isCreatableLinkDisabled, isCreatableLinkCancel, \n                isToolbarActive, isToolbarBusy, toolbar, toolbarActiveButton, isBusyHeader } = props,\n            bodyHeader = <Header {...headerAttr} isToolbarActive={ sortingBusy || isSortableBusy ? false : isToolbarActive }\n                isCreatableLinkDisabled={ searchTerm || sortingBusy || isSortableBusy ? true : props.isCreatableLinkDisabled } />,\n            \n            // Tree\n            bodyTreeWrapper = stickyTreeCalculatedTop !== undefined ? this.renderTreeWrapper() : undefined, // Avoid double rendering for massive tree's while waiting for componentDidMount\n            className = classNames('aiot-pad', innerClassName, {\n                'aiot-currently-sorting': currentlySorting\n            });\n            \n        // Create sticky attributes\n        const treeStickyAttr = Object.assign({}, {\n            top: stickyTreeCalculatedTop\n        }, props.treeStickyAttr);\n        \n        // Create wrapper with toolbar and so on...\n        return <div className={ className }>\n            { isResizable && opposite && (\n                <ResizeButton opposite={ opposite } minWidth={ minWidth }\n                    maxWidth={ maxWidth } initialWidth={ this.storage && this.storage.getItem('width') }\n                    restoreWidth={ this.storage && this.storage.getItem('rwidth') }\n                    containerId={ this.id() } onResize={ this.handleResize }\n                    onResizeFinished={ this.handleResizeFinished } oppositeOffset={ oppositeOffset } />\n            ) }\n            { !collapsed && (isStickyHeader\n                    ? <Sticky className=\"aiot-fixed-header\" { ...headerStickyAttr }>{ bodyHeader }</Sticky>\n                    : <div>{ bodyHeader }</div>) }\n            { !collapsed && (isSticky\n                ? <Sticky { ...treeStickyAttr }>{ bodyTreeWrapper }</Sticky>\n                : <div>{ bodyTreeWrapper }</div>) }\n        </div>;\n    }\n    \n    /**\n     * Render.\n     */\n    render() {\n        const { theme, attr, isFullWidth } = this.props,\n            className = classNames('aiot-tree', this.props.className, 'aiot-theme-' + theme, {\n                'aiot-wrap-collapse': this.state.collapsed,\n                'aiot-full-width': isFullWidth\n            }),\n            style = Object.assign({}, this.props.style, !isFullWidth && {\n                width: this.props.defaultWidth + 'px',\n                minWidth: this.props.minWidth + 'px',\n                maxWidth: this.props.maxWidth + 'px',\n            });\n\n        // Create first wrapper attributes\n        const wrapperAttr = {\n                id: this.id(),\n                style,\n                ...attr,\n                className,\n                ref: div => this.container = div\n            };\n        return <div { ...wrapperAttr }>{ this.renderWrapper() }</div>;\n    }\n    \n    /**\n     * Get an unique id for this container.\n     * \n     * @param {string} [append] Append this string to the id with '--' suffix\n     * @returns {string}\n     * @method\n     */\n    id(append) {\n        const id = this.props.id || this.state.uuid;\n        return append ? id + '--' + append : id;\n    }\n}\n\n// Export\nexport default Tree;\nexport {\n    /**\n     * @type module:react-aiot/util.uuid\n     */\n    uuid,\n    /**\n     * @type module:react-aiot/util.updateTreeItemById\n     */\n    updateTreeItemById,\n    /**\n     * @type module:react-aiot/util.getTreeParentById\n     */\n    getTreeParentById,\n    /**\n     * @type module:react-aiot/util.getTreeItemById\n     */\n    getTreeItemById,\n    /**\n     * @type module:react-aiot/util.buildOrderedParentPairs\n     */\n    buildOrderedParentPairs,\n    /**\n     * @type module:react-aiot/util.detectIE\n     */\n    detectIE\n};\n\nexport {\n    /**\n     * @type module:react-aiot/components/Header\n     */\n    Header,\n    /**\n     * @type module:react-aiot/components/Toolbar\n     */\n    Toolbar,\n    /**\n     * @type module:react-aiot/components/ToolbarButton\n     */\n    ToolbarButton,\n    /**\n     * @type module:react-aiot/components/Creatable\n     */\n    Creatable,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/dropdown/\n     */\n    Dropdown,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/menu/\n     */\n    Menu,\n    /**\n     * @type module:react-aiot/components/ResizeButton\n     */\n    ResizeButton,\n    /**\n     * @type module:react-aiot/components/Tooltip\n     */\n    Tooltip,\n    /**\n     * @type module:react-aiot/components/TreeNode\n     */\n    TreeNode,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/button/\n     */\n    Button,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/input/\n     */\n    Input,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/alert/\n     */\n    Alert,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/spin/\n     */\n    Spin,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/message/\n     */\n    message,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/icon/\n     */\n    Icon,\n    /**\n     * @type React.Element\n     * @see https://ant.design/components/popconfirm/\n     */\n    Popconfirm\n};","export function handleSearch(e) {\n    const searchTerm = (typeof e === \"string\" ? e : e.target.value).toLowerCase().trim(),\n        { tree } = this.props,\n        resultTree = [],\n        filter = node => {\n            node.title.toLowerCase().indexOf(searchTerm) > -1 && (resultTree.push(node));\n            node.childNodes && node.childNodes.forEach(filter);\n        };\n    \n    clearTimeout(this.searchTimeout);\n    if (searchTerm) {\n        this.setState({\n            searchTerm,\n            resultTreeBusy: true,\n            resultSelectedNodeIdx: undefined\n        });\n        \n        // Delay for searching\n        this.searchTimeout = setTimeout(() => {\n            tree.forEach(filter);\n            this.setState({\n                resultSelectedNodeIdx: -1,\n                resultTreeBusy: false,\n                resultTree: resultTree.slice(0, 19)\n            });\n        }, 700);\n    }else{\n        this.setState({\n            searchTerm,\n            resultSelectedNodeIdx: undefined,\n            resultTreeBusy: false,\n            resultTree: undefined\n        });\n    }\n}\n    \nexport function handleSearchKeyDown(e) {\n    const { onSelect } = this.props;\n    if (typeof this.state.resultSelectedNodeIdx === 'number' &&\n        (e.key === 'ArrowUp' || e.key === 'ArrowDown')) {\n        const addition = e.key === \"ArrowDown\" ? 1 : -1;\n        this.setState(state => ({ resultSelectedNodeIdx: state.resultSelectedNodeIdx + addition }));\n        e.preventDefault();\n        return false;\n    }else if (e.key === 'Enter' && onSelect) {\n        // Handle select\n        const searchSelected = document.getElementById(this.id()).querySelectorAll('.aiot-search-selected');\n        if (onSelect && searchSelected.length) {\n            const id = searchSelected[0].attributes['data-id'].value;\n            onSelect(!!+id ? +id : id);\n        }\n        e.preventDefault();\n        return false;\n    }else if (e.key === 'Escape') {\n        this.handleSearch('');\n        e.preventDefault();\n        return false;\n    }\n}\n    \nexport function handleSearchClose() {\n    this.handleSearch('');\n}\n    \nexport function handleSearchBlur() {\n    const resultSelectedNodeIdx = this.state.resultSelectedNodeIdx;\n    this.setState({\n        resultSelectedNodeIdx: typeof resultSelectedNodeIdx === 'number' ? -1 : undefined\n    });\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;"],"sourceRoot":""}